{
  "version": 3,
  "sources": ["../client/view/svg.js", "../client/view/draw-end.js", "../client/view/draw-level.js", "../client/maths/evaluate.js", "../client/maths/crosspoint.js", "../client/maths/intercept.js", "../client/maths/slope.js", "../client/maths/line.js", "../client/view/draw-light.js", "../client/view/draw-start.js", "../client/index.js"],
  "sourcesContent": ["export default function svg (tag, classes = [], attrs = {}) {\n  const ns = 'http://www.w3.org/2000/svg'\n  const element = document.createElementNS(ns, tag)\n\n  classes.forEach((cls) => {\n    element.classList.add(cls)\n  })\n\n  for (let [key, value] of Object.entries(attrs)) {\n    element.setAttribute(key, value)\n  }\n\n  return element\n}\n\n", "import svg from './svg'\n\nexport default function drawEnd (root, coords) {\n  const [ start, end ] = coords\n  const d = `M${start[ 0 ]},${start[ 1 ]} L${end[ 0 ]},${end[ 1 ]}`\n  const fill = 'none'\n  const stroke = 'black'\n  const path = svg('path', [ 'end' ], { d, fill, stroke, 'stroke-width': 1 })\n  root.appendChild(path)\n}\n\n", "import svg from './svg'\n\nexport default function drawLevel (root, points) {\n  const d = `M${points[0][0]},${points[0][1]}` + points\n    .slice(1)\n    .map((pair) => `L${pair[0]},${pair[1]}`)\n    .join(' ')\n  const fill = 'none'\n  const stroke = 'black'\n  const path = svg('path', [ 'level' ], { d, fill, stroke, 'stroke-width': 1 })\n  root.appendChild(path)\n}\n\n", "export default function evaluate ({ intercept, slope }) {\n  return function (x) {\n    return slope * x + intercept\n  }\n}\n\n", "import evaluate from './evaluate.js'\n\nexport default function crosspoint (line0, line1) {\n  const slope0 = line0.slope\n  const slope1 = line1.slope\n\n  if (slope0 === slope1) {\n    return crosspointWhenParallels()\n  }\n\n  if (Number.isFinite(slope0) && Number.isFinite(slope1)) {\n    return crosspointWhenBothAreFinite(line0, line1)\n  }\n\n  if (!Number.isFinite(slope0) && slope1 === 0) {\n    return crosspointWhenOneIsInfiniteTheAtherZero(line0, line1)\n  }\n\n  if (!Number.isFinite(slope1) && slope0 === 0) {\n    return crosspointWhenOneIsInfiniteTheAtherZero(line0, line1)\n  }\n\n  return crosspointWhenOneIsInfinite(line0, line1)\n}\n\nfunction crosspointWhenParallels () {\n  // Lines are parallel, i.e. will never intersect\n  return null\n}\n\nfunction crosspointWhenBothAreFinite (line0, line1) {\n  const slope0 = line0.slope\n  const intercept0 = line0.intercept\n\n  const slope1 = line1.slope\n  const intercept1 = line1.intercept\n\n  const factor = 1 / (slope0 - slope1)\n\n  return [\n    factor * (intercept1 - intercept0),\n    factor * (slope0 * intercept1 - intercept0 * slope1),\n  ]\n}\n\nfunction crosspointWhenOneIsInfinite (line0, line1) {\n  const slope0 = line0.slope\n  const intercept0 = line0.intercept\n\n  const slope1 = line1.slope\n  const intercept1 = line1.intercept\n\n  if (!Number.isFinite(slope0)) {\n    const func = evaluate({ slope: slope1, intercept: intercept1 })\n    const y = func(line0.x)\n    const x = (y - intercept1) / slope1\n    return [ x, y ]\n  }\n\n  const func = evaluate({ slope: slope0, intercept: intercept0 })\n  const y = func(line1.x)\n  const x = (y - intercept0) / slope0\n  return [ x, y ]\n}\n\nfunction crosspointWhenOneIsInfiniteTheAtherZero (line0, line1) {\n  const slope0 = line0.slope\n  const intercept0 = line0.intercept\n\n  const slope1 = line1.slope\n  const intercept1 = line1.intercept\n\n  if (!Number.isFinite(slope1)) {\n    if (slope0 === 0) {\n      return [ line1.x, intercept0 ]\n    }\n  }\n\n  if (!Number.isFinite(slope0)) {\n    if (slope1 === 0) {\n      return [ line0.x, intercept1 ]\n    }\n  }\n  return null\n}\n", "export default function computeIntercept (point0, point1) {\n  const [x0, y0] = point0\n  const [x1, y1] = point1\n\n  if (x0 === x1) {\n    if (y1 < y0) {\n      return Number.NEGATIVE_INFINITY\n    }\n    return Number.POSITIVE_INFINITY\n  }\n\n  return (y0 * x1 - y1 * x0) / (x1 - x0)\n}\n\n", "export default function computeSlope (point0, point1) {\n  const [x0, y0] = point0\n  const [x1, y1] = point1\n\n  if (x0 === x1) {\n    if (y1 < y0) {\n      return Number.NEGATIVE_INFINITY\n    }\n    return Number.POSITIVE_INFINITY\n  }\n\n  if (y0 === y1) {\n    return 0\n  }\n\n  return (y1 - y0) / (x1 - x0)\n}\n\n", "import computeIntercept from './intercept.js'\nimport computeSlope from './slope.js'\n\nexport default function computeLineVariables (point0, point1) {\n  const slope = computeSlope(point0, point1)\n  const intercept = computeIntercept(point0, point1)\n\n  if (Number.isFinite(slope)) {\n    return {\n      intercept,\n      slope,\n    }\n  }\n\n  return {\n    intercept,\n    slope,\n    x: point0[ 0 ]\n  }\n}\n\n", "import crosspoint from '../maths/crosspoint'\nimport line from '../maths/line'\nimport reflect from '../maths/reflect'\nimport svg from './svg'\n\nexport default function drawLight (root, levelPoints, start, direction) {\n  const points = computePoints(start, direction, levelPoints)\n  const d = `M${points[0][0]},${points[0][1]}` + points\n    .slice(1)\n    .map((pair) => `L${pair[0]},${pair[1]}`)\n    .join(' ')\n  const fill = 'none'\n  const stroke = 'orange'\n  const path = svg('path', [ 'light' ], { d, fill, stroke, 'stroke-width': 1 })\n  // c.f. https://jakearchibald.com/2013/animated-line-drawing-svg/#animating-it\n  const length = path.getTotalLength()\n  path.style.strokeDasharray = `${length} ${length}`\n  path.style.strokeDashoffset = length\n  path.getBoundingClientRect()\n  path.style.transition = 'stroke-dashoffset 1s linear'\n  root.appendChild(path)\n  setTimeout(() => path.style.strokeDashoffset = '0', 500)\n}\n\nfunction computePoints (start, direction, levelPoints) {\n  let svgPoints = [ start ]\n  let from = svgCoordToCartesianCoord(start)\n  let to = svgCoordToCartesianCoord(\n    start.map((point, index) => point + direction[ index ])\n  )\n\n  const points = []\n  for (let i = 0; i < levelPoints.length - 1; i++) {\n    const current = svgCoordToCartesianCoord(levelPoints[ i ])\n    const next = svgCoordToCartesianCoord(levelPoints[ i + 1 ])\n    const level = line(current, next)\n    points.push({\n      start: [ ...levelPoints[ i ] ],\n      end: [ ...levelPoints[ i + 1 ] ],\n      length: distance(levelPoints[ i ], levelPoints[ i + 1 ]),\n      ...level\n    })\n  }\n\n  const light = line(from, to)\n  const candidates = points\n    .map((pt, index) => {\n      const crpt = crosspoint(\n        { intercept: pt.intercept, slope: pt.slope },\n        light\n      )\n\n      return {\n        ...pt,\n        crosspoint: crpt,\n        distance: distance(crpt, from),\n        index,\n        within: {\n          x: from[ 0 ] >= pt.start[ 0 ] && from[ 0 ] <= pt.end[ 0 ],\n          y: from[ 1 ] >= pt.start[ 1 ] && from[ 1 ] <= pt.end[ 1 ],\n        },\n      }\n    })\n    .filter((pt) => pt.within.x || pt.within.y)\n\n  if (candidates.length === 0) {\n    return gameover()\n  }\n\n  svgPoints.push(\n    cartesianCoordToSvgCoord(\n      candidates\n        .reduce((previous, current) => {\n          return previous.distance < current.distance\n            ? previous\n            : current\n          }\n        )\n        .crosspoint\n    )\n  )\n  return svgPoints\n}\n\nfunction svgCoordToCartesianCoord (point) {\n  // Assume a viewBox of \"0 0 100 100\" here\n  const [ x, y ] = point\n  return [ x, 100 - y ]\n}\n\nfunction cartesianCoordToSvgCoord (point) {\n  // Assume a viewBox of \"0 0 100 100\" here\n  const [ x, y ] = point\n  return [ x, 100 - y ]\n}\n\nfunction distance (point0, point1) {\n  if (!point0 || !point1) {\n    return null\n  }\n\n  const [ x0, y0 ] = point0\n  const [ x1, y1 ] = point1\n  return Math.sqrt(\n    Math.pow(Math.abs(x1 - x0), 2) + Math.pow(Math.abs(y1 - y0), 2)\n  )\n}\n\nfunction gameover () {\n  alert('You lost')\n}\n", "import svg from './svg'\n\nexport default function drawStart (root, start) {\n  const d = `M${start[0]},${start[1]} l3,5 h-6Z`\n  const fill = 'orange'\n  const stroke = 'orange'\n  const path = svg('path', [ 'start' ], { d, fill, stroke, 'stroke-width': 1 })\n  root.appendChild(path)\n}\n\n", "import drawEnd from './view/draw-end'\nimport drawLevel from './view/draw-level'\nimport drawLight from './view/draw-light'\nimport drawStart from './view/draw-start'\nimport levels from './levels.json'\n\n'use strict';\n\nlet currentLevelIndex = 0\n\nlistLevels(levels.map((level) => level.name))\nregisterEventListeners()\nloadLevel(levels[ currentLevelIndex ].name)\n\n// TODO: Add a game over screen\n// TODO: Add a share on Twitter screen\n\nfunction listLevels (names) {\n  const list = document.getElementById('levels')\n  names.forEach((name) => {\n    const item = document.createElement('li')\n    item.textContent = name\n    list.appendChild(item)\n  })\n}\n\nfunction registerEventListeners () {\n  const angle = document.getElementById('angle')\n  const form = document.getElementById('form')\n  const list = document.getElementById('levels')\n\n  angle.addEventListener('change', (event) => onChange(event))\n  form.addEventListener('submit', (event) => onSubmit(event))\n  list.addEventListener('click', (event) => onClick(event))\n}\n\nfunction onChange (event) {\n  const element = document.querySelector('.start')\n  if (element === null) {\n    return\n  }\n\n  const input = event.target\n  const value = parseInt(input.value, 10)\n  const { start } = levels[ currentLevelIndex ]\n  const [ begin, end ] = start\n\n  element.setAttribute('transform', `rotate(${value}, ${begin}, ${end})`)\n  clearLight()\n}\n\nfunction onClick (event) {\n  const { currentTarget, target } = event\n  if (target.nodeName.toLowerCase() !== 'li') {\n    return\n  }\n\n  currentLevelIndex = Array\n    .from(\n      currentTarget.children\n    )\n    .findIndex((child) => child === target)\n  loadLevel(target.textContent)\n}\n\nfunction onSubmit (event) {\n  event.preventDefault()\n\n  const root = document.getElementById('root')\n\n  clearLight()\n\n  const { shape, start } = levels[ currentLevelIndex ]\n  drawLight(root, shape, start, getAngle())\n\n  shareOnTwitter()\n  updateFavicon()\n}\n\nfunction loadLevel (levelName) {\n  const root = document.getElementById('root')\n  const level = levels.find((level) => level.name === levelName)\n\n  reset()\n  drawLevel(root, level.shape)\n  drawStart(root, level.start)\n  drawEnd(root, level.end)\n  updateFavicon()\n}\n\nfunction resetAngle () {\n  const angle = document.getElementById('angle')\n  angle.value = 0\n}\n\nfunction resetAttempts () {\n  const attempt = document.getElementById('attempt')\n  attempt.value = 0\n}\n\nfunction reset () {\n  resetAngle()\n  resetAttempts()\n\n  clearLevel()\n  clearStart()\n  clearEnd()\n  clearLight()\n}\n\nfunction clearLevel () {\n  const level = document.querySelector('.level')\n  if (level) {\n    level.remove()\n  }\n}\n\nfunction clearStart () {\n  const start = document.querySelector('.start')\n  if (start) {\n    start.remove()\n  }\n}\n\nfunction clearEnd () {\n  const end = document.querySelector('.end')\n  if (end) {\n    end.remove()\n  }\n}\n\nfunction clearLight () {\n  const light = document.querySelector('.light')\n  if (light) {\n    light.remove()\n  }\n}\n\nfunction getAngle () {\n  const angle = document.getElementById('angle')\n\n  const radians = degToRad(parseInt(angle.value, 10) - 90)\n  return polarToCartesian({ r: 1, degree: radians })\n}\n\nfunction increaseAttempt () {\n  const attempt = document.getElementById('attempt')\n  attempt.value = parseInt(attempt.value, 10) + 1\n}\n\nfunction degToRad (deg) {\n  /* deg / 180 = x / PI */\n  return deg * Math.PI / 180\n}\n\nfunction polarToCartesian (polar) {\n  const { r, degree } = polar\n  const x = parseFloat((Math.cos(degree) / r).toFixed(2))\n  const y = parseFloat((Math.sin(degree) / r).toFixed(2))\n  return [ x, y ]\n}\n\nfunction updateFavicon () {\n  const svg = document.getElementById('root')\n  const icon = document.querySelector('link[rel=\"icon\"]')\n\n  const serializer = new XMLSerializer()\n  const str = serializer\n    .serializeToString(svg)\n    .replace(/ id=\"\\w+\"/g, '')\n    .replace(/ style=\".*\"/g, '')\n    .replace(/ class=\"\\w+\"/g, '')\n  icon.href = 'data:image/svg+xml;utf8,' + str\n}\n\nfunction shareOnTwitter () {\n  const shareMe = document.getElementById('share-me')\n  const element = document.getElementById('attempt')\n\n  const plural = parseInt(element.value, 10) !== 1 ? '' : 's'\n  const attempt = `${element.value} attempt${plural}`\n  const currentLevel = currentLevelIndex + 1\n\n  const encodedText = encodeURIComponent(\n    [\n      'I played \"I Really Move On\".',\n      `I completed level ${currentLevel} after ${attempt}!`,\n      'What is your highscore?',\n      ''  // To push hashtag and via to new line\n    ].join('\\n')\n  )\n\n  const { hostname, pathname, protocol } = location\n  const encodedUrl = encodeURIComponent(`${protocol}//${hostname}${pathname}`)\n\n  const href = `https://twitter.com/intent/tweet?url=${encodedUrl}&hashtags=gamedevjs&via=AndreJaenisch&text=${encodedText}`\n  shareMe.href = href\n}\n"],
  "mappings": "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",
  "names": []
}
